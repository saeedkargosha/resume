// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  password  String
  summary   String
  firstname String?
  lastName  String?
  phone     String

  educations  Education[]
  experiences Experience[]
  skills      Skill[]
  companies   Company[]
}

enum EMPOLY_TYPE {
  REMOTE
  HYBIRD
}

model Experience {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String
  description  String?
  start        DateTime?
  end          DateTime?
  deleted      Boolean     @default(false)
  link         String?
  type         EMPOLY_TYPE @default(REMOTE)

  userId String
  user   User   @relation(fields: [userId], references: [id])

  company   Company @relation(fields: [companyId], references: [id])
  companyId String

  @@index([userId])
}

model Company {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  deleted     Boolean @default(false)
  link        String?
  country     String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  Experience Experience[]
}

model Education {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  start       DateTime?
  end         DateTime?
  deleted     Boolean   @default(false)
  link        String?

  university   University @relation(fields: [universityId], references: [id])
  universityId String

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([userId])
}

model University {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  deleted     Boolean @default(false)
  link        String?
  country     String?

  Education Education[]
}

model Group {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  deleted     Boolean @default(false)

  skills Skill[]
}

model Skill {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  level       Int?
  link        String?
  deleted     Boolean @default(false)

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  groups  Group?  @relation(fields: [groupId], references: [id])
  groupId String?
}
